name: Deploy to EC2 ðŸš€

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Setup .NET environment
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x' # Specify the .NET version

    # Step 3: Restore dependencies
    - name: Restore dependencies
      run: dotnet restore

    # Step 4: Build the project
    - name: Build project
      run: dotnet publish -c Release -o ./publish

    # Step 5: Upload build artifacts
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: published-app
        path: ./publish

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
    # Step 1: Download build artifacts
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: published-app
        path: ./publish

    # Step 2: Setup SSH
    - name: Setup SSH directory
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        touch ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    # Step 3: Add known hosts (EC2 Host)
    - name: Add known hosts
      run: |
        ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

    # Step 4: Add private key to SSH
    - name: Add private key
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

    # Step 5: Copy files to EC2
    - name: Copy files to remote server
      run: |
        scp -r ./publish/* ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }}:/home/ubuntu/

    # Step 6: Move files and restart service
    - name: Deploy application and restart service
      run: |
        ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.EC2_HOST }} << EOF
          sudo mkdir -p /var/www/myapp
          sudo mv /home/ubuntu/* /var/www/myapp/
          sudo chown -R www-data:www-data /var/www/myapp
          sudo systemctl restart myapp.service
        EOF
